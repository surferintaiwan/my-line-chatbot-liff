{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/pet/register-medicine/register-medicine.component.ts","./src/app/pet/register-medicine/register-medicine.component.html","./src/app/pet/register-pet/register-pet.component.ts","./src/app/pet/register-pet/register-pet.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { RegisterMedicineComponent } from './pet/register-medicine/register-medicine.component';\nimport { RegisterPetComponent } from './pet/register-pet/register-pet.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: 'register-pet', component: RegisterPetComponent },\n  { path: 'register-medicine', component: RegisterMedicineComponent },\n];;\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'my-line-chatbot-liff';\n}\n","<h2>寵物備忘錄</h2>\n\n\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RegisterPetComponent } from './pet/register-pet/register-pet.component';\nimport { RegisterMedicineComponent } from './pet/register-medicine/register-medicine.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterPetComponent,\n    RegisterMedicineComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register-medicine',\n  templateUrl: './register-medicine.component.html',\n  styleUrls: ['./register-medicine.component.css']\n})\nexport class RegisterMedicineComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>register-medicine works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport liff from '@line/liff';\n\n@Component({\n  selector: 'app-register-pet',\n  templateUrl: './register-pet.component.html',\n  styleUrls: ['./register-pet.component.css']\n})\nexport class RegisterPetComponent implements OnInit {\n\n  constructor(\n  ) { }\n\n  async ngOnInit(): Promise<void> {\n    await liff.init({ liffId: '1656200570-d1bB32n8' });\n    console.log(liff.isLoggedIn())\n\n    console.log(111)\n    if (!liff.isLoggedIn()) {\n      console.log(222)\n      liff.login();\n      console.log(333)\n      return;\n    }\n    console.log(444)\n    const decodedIDToken = liff.getDecodedIDToken()\n    const profile = await liff.getProfile()\n    console.log(decodedIDToken)\n    console.log(profile)\n\n\n    // if(liff.isLoggedIn) {\n    //   liff.getDecodedIDToken\n    // }\n    // console.log(result)\n  }\n\n}\n","<p>register-pet works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}